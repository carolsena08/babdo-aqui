<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Painel Financeiro - Gestão de Creche</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
     <style>
       body { font-family: 'Poppins', sans-serif;
}
        ::-webkit-scrollbar { width: 8px;
}
        ::-webkit-scrollbar-track { background: #f1f1f1;
}
        ::-webkit-scrollbar-thumb { background: #a8d5ba; border-radius: 10px;
}
        ::-webkit-scrollbar-thumb:hover { background: #82c29b;
}
        
        .nav-tab {
            padding: 10px 16px;
border-bottom: 3px solid transparent;
            transition: all 0.3s ease-in-out; font-weight: 500; color: #8A8A8A;
}
        .nav-tab:hover { color: #2E6B46;
}
        .nav-tab.active {
            font-weight: 700;
color: #3D8C5B; border-bottom-color: #3D8C5B;
        }

        .sidebar {
            width: 280px;
background: linear-gradient(180deg, #FFF4DF 0%, #f8f0e3 100%);
            display: flex; flex-direction: column; justify-content: space-between;
            box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
min-height: 100vh;
            flex-shrink: 0; position: fixed; left: 0; top: 0; z-index: 1000;
}
        .logo { padding: 0px 40px; text-align: center; margin-bottom: 25px; margin-top: 30px;
}
        .logo img { max-width: 150px;
}
        .menu { flex: 1; padding: 20px 18px; overflow-y: auto;
}
        .menu-item {
            padding: 16px 20px;
margin-bottom: 6px; border-radius: 8px; cursor: pointer;
            transition: all 0.3s ease; position: relative; display: flex; align-items: center;
            font-weight: 500; color: black;
text-decoration: none;
        }
        .menu-item i { margin-right: 15px; font-size: 18px; width: 24px;
text-align: center; }
        .menu-item:hover { background-color: #6c757d21;
}
        .menu-item.active { background-color: rgba(128, 128, 128, 0.1); color: #333; font-weight: 600;
}
        .sidebar-footer { padding: 20px 18px; border-top: 1px solid rgba(0, 0, 0, 0.1);
}
        .logout-button {
            padding: 16px 20px;
border-radius: 8px; cursor: pointer; transition: all 0.3s ease;
            display: flex; align-items: center; font-weight: 500; color: #333;
            width: 100%; text-decoration: none;
}
        .logout-button i { margin-right: 15px; font-size: 18px; width: 24px; text-align: center;
}
        .logout-button:hover { background-color: rgba(210, 42, 42, 0.1); color: #D22A2A; font-weight: 600;
}

        :root {
            --orange: #F88C12;
--blue: #00A6FF;
            --green: #59C631;
            --background: #FCFAFF;
            --text-primary: #333;
            --text-secondary: #6c757d;
            --sidebar-bg: #FFF4DF;
            --sidebar-width: 280px;
}


        /* SEU CÓDIGO CSS DA SIDEBAR (INTEGRADO E AJUSTADO PARA O LAYOUT GLOBAL) */
        
        * {
            margin: 0;
padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
       
        body {
            background-color: var(--background);
min-height: 100vh;
            display: flex;
        }


        .sidebar {
            width: var(--sidebar-width);
background: linear-gradient(180deg, #FFF4DF 0%, #f8f0e3 100%);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
min-height: 100vh;
            flex-shrink: 0;
            position: fixed;
            left: 0;
            top: 0;
            z-index: 1000;
}


        .logo {
            padding: 0px 40px;
text-align: center;
            margin-bottom: 25px;
            margin-top: 30px;
        }
        .logo img {
            max-width: 150px;
}


        .menu {
            flex: 1;
padding: 20px 18px;
            overflow-y: auto;
        }


        .menu-item {
            padding: 30px 20px;
margin-bottom: 6px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            align-items: center;
            font-weight: 500;
            overflow: visible;
color: black;
            text-decoration: none;
        }


        .menu-item i {
            margin-right: 15px;
font-size: 18px;
            width: 24px;
            text-align: center;
            z-index: 2;
        }


        .menu-item span {
            z-index: 2;
font-size: 15px;
        }


        .menu-item:hover {
            background-color: #6c757d21;
}


        .menu-item::after {
            padding: 0 10px;
content: '';
            position: absolute;
            bottom: -3px;
            left: 20px;
            height: 2px;
            width: 0px;
            transition: width 0.3s ease;
            border-radius: 1px;
}


        .menu-item:hover::after,
        .menu-item.active::after {
            width: calc(100% - 40px);
}


        /* Cores das barrinhas inferiores dos itens do menu */
        .menu-item:nth-child(1)::after { background-color: #F4BF27;
}
        .menu-item:nth-child(2)::after { background-color: #00A6FF;
}
        .menu-item:nth-child(3)::after { background-color: #9747FF;
}
        .menu-item:nth-child(4)::after { background-color: #F88C12;
}
        .menu-item:nth-child(5)::after { background-color: #D22A2A;
}
        .menu-item:nth-child(6)::after { background-color: #59C631;
}


        .menu-item.active {
            background-color: rgba(128, 128, 128, 0.356);
color: #333;
            font-weight: 600;
        }


        .menu-item.active::before {
            content: '';
position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: currentColor;
            z-index: 2;
}


        .sidebar-footer {
            padding: 20px 18px;
border-top: 1px solid rgba(0, 0, 0, 0.1);
        }
       
        .logout-button {
            padding: 16px 20px;
border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            font-weight: 500;
            color: #333;
            width: 100%;
            text-decoration: none;
}


        .logout-button i {
            margin-right: 15px;
font-size: 18px;
            width: 24px;
            text-align: center;
        }


        .logout-button:hover {
            background-color: rgba(210, 42, 42, 0.1);
color: #D22A2A;
            font-weight: 600;
        }
         @media (max-width: 768px) {
            :root { --sidebar-width: 70px;
}
            .menu-item span, .logout-button span, .seteeduca { display: none;
}
            .menu-item i, .logout-button i { margin-right: 0;
}
            .sidebar .logo { padding: 0 10px;
}
            .sidebar .logo img { max-width: 50px;
}
            .sidebar-footer { padding: 10px 5px;
}
            .menu { padding: 10px 5px;
}
            .menu-item { padding: 15px 5px; justify-content: center;
}
            .menu-item::after { display: none;
}
            .menu-item.active::before { right: 5px;
}
            .main-content { margin-left: var(--sidebar-width); width: calc(100% - var(--sidebar-width));
}
            .header-title h1 { font-size: 28px;
}
            .header-title p { font-size: 14px;
}
         }

        /* Perfil do Usuário e Dropdown */
        .profile {
            position: relative;
            cursor: pointer;
            z-index: 10;
        }
        .profile-header {
            display: flex;
            align-items: center;
            gap: 8px;
            color: white;
        }
        .profile-icon {
            font-size: 24px;
        }
        .profile-arrow {
            font-size: 14px;
            transition: transform 0.3s ease;
        }
        .profile.active .profile-arrow {
            transform: rotate(180deg);
        }
        .profile-dropdown {
            display: none;
            position: absolute;
            top: calc(100% + 15px);
            right: 0;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            width: 200px;
            overflow: hidden;
            z-index: 1001;
        }
        .profile-dropdown.show {
            display: block;
        }
        .profile-dropdown a {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 16px;
            font-size: 15px;
            color: #333;
            text-decoration: none;
            transition: background-color 0.2s ease;
        }
        .profile-dropdown a:hover {
            background-color: #f7f8fa;
        }
        .profile-dropdown a i {
            width: 20px;
            text-align: center;
            color: #6c757d;
        }
        .dropdown-divider {
            height: 1px;
            background-color: #e9ecef;
            margin: 8px 0;
        }
    </style>

       <script>
        tailwind.config = {
            theme: { extend: { colors: {
                'brand-green-light': '#E2F5EA', 'brand-green-medium': '#A8D5BA',
                'brand-green-dark': '#3D8C5B', 'brand-text': '#2E6B46',
               
 'brand-gray': '#F7F8FA', 'brand-gray-text': '#8A8A8A',
                'brand-red': '#FF6B6B', 'brand-blue': '#4A90E2',
            }}}
        }
    </script>
</head>
<body class="bg-brand-gray text-brand-gray-text">

    <aside class="sidebar hidden lg:flex">
         <div>
            <div class="logo">
                <img src="logo.png" alt="logo">
    
        </div>
             <div class="menu">
                <a href="/home" class="menu-item" onclick="navegarPara('inicio')">
                    <i class="fas fa-home"></i>
                    <span>INÍCIO</span>
                </a>
 
               <a href="/acessar-aluno" class="menu-item" onclick="navegarPara('cadastro')">
                    <i class="fas fa-address-card"></i>
                    <span>CADASTRO</span>
                </a>
                <a href="/matricula" class="menu-item" onclick="navegarPara('matricula')">
     
               <i class="fas fa-user-graduate"></i>
                    <span>MATRÍCULA</span>
                </a>
                <a href="/prof-cadastrados" class="menu-item" id="professor-link">
                    <i class="fas fa-chalkboard-teacher"></i>
      
              <span>PROFESSOR</span>
                </a>
   
                <a href="/turmas-cadastradas" class="menu-item" onclick="navegarPara('turmas')">
                    <i class="fas fa-users"></i>
                    <span>TURMA</span>
      
          </a>
                <a href="#" class="menu-item active" onclick="navegarPara('financeiro')">
                    <i class="fas fa-dollar-sign"></i>
                    <span>FINANCEIRO</span>
                </a>
            
</div>
        </div>
        <div class="sidebar-footer">
            <a href="#" class="logout-button"><i class="fa-solid fa-right-from-bracket"></i><span>Sair</span></a>
        </div>
    </aside>
    
    <div class="flex flex-col flex-1 lg:ml-[280px] min-h-screen">
        
        <header class="bg-brand-green-header text-brand-text p-4 md:p-5 flex justify-between items-center w-full shadow-md sticky top-0 z-30" style="background-color: #59C631;">
            <div class="flex items-center gap-4">
                 <h1 class="text-2xl flex items-center gap-2">
                    <i class="fas fa-dollar-sign text-white"></i>
                    <span style="color: white;">Painel <b>FINANCEIRO</b></span>
                </h1>
            </div>
     
         <div class="flex items-center gap-4">
                <span id="current-date" class="text-sm font-medium hidden sm:block" style="color: white; font-size: 20px;"></span>
                <i class="fa-solid fa-calendar-days text-white mr-4"></i>

                <div class="profile" id="profile-toggle">
                    <div class="profile-header">
                        <i class="fas fa-user-circle profile-icon"></i>
                        <i class="fas fa-chevron-down profile-arrow"></i>
                    </div>
                    <div class="profile-dropdown" id="profile-dropdown-menu">
                        <a href="/meuperfil"><i class="fas fa-user"></i> Meu perfil</a>
                        <a href="/mensalidade"><i class="fas fa-file-invoice-dollar"></i> Mensalidade</a>
                        <a href="/arquivados"><i class="fas fa-archive"></i> Arquivados</a>
                        <div class="dropdown-divider"></div>
                    </div>
                </div>
            </div>
        </header>

        <main class="flex-1 p-4 md:p-6 lg:p-8 flex flex-col">
            <nav class="mb-6">
                <ul class="flex items-center gap-2 md:gap-4 border-b border-gray-200">
                    <li><button id="btn-dashboard" class="nav-tab active">Visão Geral</button></li>
                    <li><button id="btn-alunos" class="nav-tab">Situação Alunos</button></li>
                    <li><button id="btn-relatorios" class="nav-tab">Relatórios</button></li>
                    <li><button id="btn-historico" class="nav-tab">Histórico</button></li>
                </ul>
            </nav>
       
            <div id="content-area" class="flex-1"></div>
        </main>
    </div>

    <div id="nova-receita-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center p-4 z-40">
        <div class="bg-white rounded-lg shadow-xl w-full max-w-md p-6">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-brand-text">Novo Lançamento</h3>
                <button id="close-nova-receita-modal" class="text-gray-500 hover:text-gray-800 text-3xl">&times;</button>
            </div>
            <form id="add-revenue-form">
                <div class="space-y-4">
                    <div>
                        <label for="transaction-type" class="block text-sm font-medium text-gray-700">Tipo de Lançamento</label>
                        <select id="transaction-type" name="transaction-type" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brand-green-medium focus:border-brand-green-medium">
                            <option value="Receita" selected>Receita</option>
                            <option value="Despesa">Despesa</option>
                        </select>
                    </div>
                    <div id="customer-field">
                        <label for="customerId" class="block text-sm font-medium text-gray-700">Selecione o Aluno</label>
                        <select id="customerId" name="customerId" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brand-green-medium focus:border-brand-green-medium"></select>
                    </div>
                    <div>
                        <label for="category" class="block text-sm font-medium text-gray-700">Categoria</label>
                        <select id="category" name="category" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brand-green-medium focus:border-brand-green-medium"></select>
                    </div>
                    <div>
                        <label for="description" class="block text-sm font-medium text-gray-700">Descrição</label>
                        <input type="text" id="description" name="description" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brand-green-medium focus:border-brand-green-medium">
                    </div>
                    <div>
                        <label for="revenue-value" class="block text-sm font-medium text-gray-700">Valor</label>
                        <input type="number" step="0.01" id="revenue-value" name="value" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brand-green-medium focus:border-brand-green-medium">
                    </div>
                    <div>
                        <label for="revenue-dueDate" class="block text-sm font-medium text-gray-700">Data</label>
                        <input type="date" id="revenue-dueDate" name="date" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-brand-green-medium focus:border-brand-green-medium">
                    </div>
                </div>
                <div class="mt-6 flex justify-end gap-4">
                    <button type="button" id="cancel-nova-receita-modal" class="bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300">Cancelar</button>
                    <button type="submit" class="bg-brand-green-dark text-white px-4 py-2 rounded-md hover:bg-brand-text">Salvar</button>
                </div>
            </form>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- VARIÁVEIS GLOBAIS E SELETORES DO DOM ---
        const contentArea = document.getElementById('content-area');
        const navTabs = document.querySelectorAll('.nav-tab');
        const dateEl = document.getElementById('current-date');
        const novaReceitaModal = document.getElementById('nova-receita-modal');
        const addRevenueForm = document.getElementById('add-revenue-form');
        const profileToggle = document.getElementById('profile-toggle');
        const dropdownMenu = document.getElementById('profile-dropdown-menu');

        let cashflowChartInstance;
        let expensesChartInstance;
        let relatoriosData = []; // Armazenará os dados da API

        // --- LÓGICA DE INICIALIZAÇÃO ---
        if (dateEl) {
            dateEl.textContent = new Date().toLocaleDateString('pt-BR', { day: 'numeric', month: 'long' });
        }

        // --- LÓGICA DE DADOS (API) ---

        // NOVA FUNÇÃO para buscar alunos do seu backend
        const getAlunos = async () => {
            try {
                const response = await fetch('/api/alunos');
                if (!response.ok) {
                    throw new Error('Falha ao buscar dados dos alunos');
                }
                return await response.json();
            } catch (error) {
                console.error(error);
                return []; 
            }
        };

        // NOVA FUNÇÃO para buscar relatórios do seu backend
        async function fetchRelatorios() {
            try {
                const response = await fetch('/api/transacoes');
                if (!response.ok) {
                    throw new Error('Falha ao buscar dados de transações');
                }
                const data = await response.json();
                relatoriosData = data; 
                return data;
            } catch (error) {
                console.error(error);
                relatoriosData = [];
                return [];
            }
        }

        // --- TEMPLATES HTML (Todo o seu HTML de templates vai aqui, omitido para economizar espaço) ---
        const dashboardTemplate = `... (Seu HTML da Visão Geral) ...`;
        const alunosTemplate = `<div class="bg-white p-6 rounded-lg shadow-sm h-full"><h2 class="text-2xl font-bold mb-4 text-brand-text">Situação Financeira dos Alunos</h2><div class="overflow-x-auto"><table class="w-full text-left"><thead class="bg-gray-100"><tr><th class="p-3">Nome do Aluno</th><th class="p-3">Responsável</th><th class="p-3">Mensalidade</th><th class="p-3">Vencimento</th><th class="p-3">Status da Mensalidade</th></tr></thead><tbody id="alunos-table-body"></tbody></table></div></div>`;
        const relatoriosTemplate = `<div class="bg-white p-6 rounded-lg shadow-sm h-full"><div class="flex justify-between items-center mb-4"><h2 class="text-2xl font-bold text-brand-text">Relatório Financeiro Detalhado</h2><button id="btn-novo-lancamento" class="bg-brand-green-dark text-white px-4 py-2 rounded-md hover:bg-brand-text flex items-center gap-2"><i class="fas fa-plus"></i>Novo Lançamento</button></div><div class="overflow-x-auto"><table class="w-full text-left"><thead class="bg-gray-100"><tr><th class="p-3">Data</th><th class="p-3">Descrição</th><th class="p-3">Categoria</th><th class="p-3">Valor</th><th class="p-3">Tipo</th><th class="p-3">Ações</th></tr></thead><tbody id="relatorios-table-body"></tbody></table></div></div>`;
        const historicoTemplate = `... (Seu HTML de Histórico) ...`;

        // --- FUNÇÕES DE RENDERIZAÇÃO E LÓGICA DE UI ---
        function setupCharts() {
            // ... Sua lógica de gráficos ...
        }

        async function renderRecentActivity() {
            // ... Sua lógica de atividade recente ...
        }

        async function renderAlunos() {
            const alunos = await getAlunos(); // <-- Busca dados reais
            const tbody = document.getElementById('alunos-table-body');
            if (!tbody) return;
            tbody.innerHTML = '';
            const statusClasses = { pago: 'bg-green-100 text-green-700', pendente: 'bg-yellow-100 text-yellow-700', atrasado: 'bg-red-100 text-red-700' };
            alunos.forEach(aluno => {
                const row = `<tr><td class="p-3">${aluno.studentName}</td><td class="p-3">${aluno.parentName}</td><td class="p-3">R$ ${aluno.mensalidade.toFixed(2).replace('.', ',')}</td><td class="p-3">${aluno.vencimento}</td><td class="p-3"><span class="px-2 py-1 rounded-full text-sm font-medium ${statusClasses[aluno.status]}">${aluno.status.charAt(0).toUpperCase() + aluno.status.slice(1)}</span></td></tr>`;
                tbody.innerHTML += row;
            });
        }

        function renderRelatorios(filterStatus = 'ativo') {
            const tbodyId = filterStatus === 'ativo' ? 'relatorios-table-body' : 'historico-table-body';
            const tbody = document.getElementById(tbodyId);
            if(!tbody) return;

            const relatorios = relatoriosData.filter(r => (filterStatus === 'ativo' ? (r.status !== 'arquivado') : (r.status === 'arquivado')))
                                             .sort((a, b) => new Date(b.date) - new Date(a.date));

            tbody.innerHTML = '';
            relatorios.forEach(item => {
                const valueClass = item.type === 'Receita' ? 'text-green-600' : 'text-red-600';
                const actionButton = filterStatus === 'ativo'
                    ? `<button data-id="${item.id}" class="archive-btn text-yellow-600 hover:underline">Arquivar</button>`
                    : `<button data-id="${item.id}" class="unarchive-btn text-green-600 hover:underline">Reativar</button>`;
                const row = `<tr><td class="p-3">${new Date(item.date).toLocaleDateString('pt-BR')}</td><td class="p-3">${item.description}</td><td class="p-3">${item.category}</td><td class="p-3 font-medium ${valueClass}">R$ ${Math.abs(item.value).toFixed(2).replace('.',',')}</td><td class="p-3">${item.type}</td><td class="p-3">${actionButton}</td></tr>`;
                tbody.innerHTML += row;
            });
        }

        async function populateSelects() {
            const alunos = await getAlunos(); // <-- Busca alunos reais
            const customerSelect = document.getElementById('customerId');
            customerSelect.innerHTML = alunos.map(a => `<option value="${a.id}">${a.studentName}</option>`).join(''); // Usa o ID do *nosso* BD
        }

        function updateFormBasedOnType() {
            const type = document.getElementById('transaction-type').value;
            const categorySelect = document.getElementById('category');
            const customerField = document.getElementById('customer-field');
            const revenueCategories = ['Mensalidade', 'Matrícula', 'Outras Receitas'];
            const expenseCategories = ['Salários', 'Contas', 'Materiais', 'Alimentação', 'Aluguel', 'Outras Despesas'];
            if (type === 'Receita') {
                categorySelect.innerHTML = revenueCategories.map(c => `<option value="${c}">${c}</option>`).join('');
                customerField.style.display = 'block';
            } else {
                categorySelect.innerHTML = expenseCategories.map(c => `<option value="${c}">${c}</option>`).join('');
                customerField.style.display = 'none';
            }
        }

        function handleReportAction(e) {
            // ... Sua lógica de arquivar ...
        }

        async function renderContent(tabId) {
            contentArea.removeEventListener('click', handleReportAction);
            if (tabId === 'btn-dashboard' || tabId === 'btn-alunos' || tabId === 'btn-relatorios' || tabId === 'btn-historico') {
                await fetchRelatorios(); // Busca dados frescos ao trocar de aba
            }

            if (tabId === 'btn-dashboard') {
                contentArea.innerHTML = dashboardTemplate;
                setTimeout(() => { /* setupCharts(); renderRecentActivity(); */ }, 0); // Recarregar gráficos
            } else if (tabId === 'btn-alunos') {
                contentArea.innerHTML = alunosTemplate;
                renderAlunos();
            } else if (tabId === 'btn-relatorios') {
                contentArea.innerHTML = relatoriosTemplate;
                renderRelatorios('ativo');
                document.getElementById('btn-novo-lancamento').addEventListener('click', () => {
                    addRevenueForm.reset();
                    updateFormBasedOnType();
                    novaReceitaModal.style.display = 'flex';
                });
                contentArea.addEventListener('click', handleReportAction);
            } else if (tabId === 'btn-historico') {
                contentArea.innerHTML = historicoTemplate;
                renderRelatorios('arquivado');
                contentArea.addEventListener('click', handleReportAction);
            }
        }

        // --- EVENT LISTENERS ---
        if(profileToggle) { /* ... Lógica do dropdown do perfil ... */ }
        document.getElementById('close-nova-receita-modal').addEventListener('click', () => novaReceitaModal.style.display = 'none');
        document.getElementById('cancel-nova-receita-modal').addEventListener('click', () => novaReceitaModal.style.display = 'none');
        document.getElementById('transaction-type').addEventListener('change', updateFormBasedOnType);

        // ATUALIZADO: Evento de submit para enviar dados ao BACKEND
        addRevenueForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(addRevenueForm);
            const data = Object.fromEntries(formData.entries());

            const body = {
                tipo: data['transaction-type'],
                valor: parseFloat(data.value),
                data: data.date,
                descricao: data.description,
                categoria: data.category,
                alunoId: data.customerId // ID do nosso BD
            };

            try {
                const response = await fetch('/api/transacoes', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(body)
                });

                if (response.ok) {
                    novaReceitaModal.style.display = 'none';
                    const activeTab = document.querySelector('.nav-tab.active');
                    renderContent(activeTab.id); // Re-renderiza a aba atual
                } else {
                    const error = await response.json();
                    alert(`Erro ao salvar: ${error.message}`);
                }
            } catch (error) {
                console.error("Erro no submit:", error);
                alert('Erro de conexão ao salvar.');
            }
        });

        navTabs.forEach(tab => tab.addEventListener('click', (e) => {
             navTabs.forEach(t => t.classList.remove('active'));
             e.currentTarget.classList.add('active');
             renderContent(e.currentTarget.id);
        }));

        // --- INICIALIZAÇÃO ---
        populateSelects(); // Popula o select de alunos
        document.getElementById('btn-dashboard').click(); // Começa na Visão Geral
    });
</script>

    </body>
</html>